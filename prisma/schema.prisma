datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  SALER
  USER
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  firstName String?
  lastName  String?
  role      Role    @default(USER)
  // For Google Auth, you might store an optional googleId:
  googleId  String? @unique

  // Relationship: A seller has many products.
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  // If using nested categories:
  parentId Int?
  parent   Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  children Category[] @relation("CategoryToCategory")

  // Relationship: A category has many products.
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  price       Float
  // Optionally add stock, SKU, etc.

  // Foreign Key to Category:
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  // Optional: If the product is linked to a seller:
  sellerId Int?
  seller   User? @relation(fields: [sellerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
